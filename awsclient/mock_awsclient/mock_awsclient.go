// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mattermost/mattermost-plugin-apps/awsclient (interfaces: Client)

// Package mock_awsclient is a generated GoMock package.
package mock_awsclient

import (
	gomock "github.com/golang/mock/gomock"
	io "io"
	reflect "reflect"
)

// MockClient is a mock of Client interface
type MockClient struct {
	ctrl     *gomock.Controller
	recorder *MockClientMockRecorder
}

// MockClientMockRecorder is the mock recorder for MockClient
type MockClientMockRecorder struct {
	mock *MockClient
}

// NewMockClient creates a new mock instance
func NewMockClient(ctrl *gomock.Controller) *MockClient {
	mock := &MockClient{ctrl: ctrl}
	mock.recorder = &MockClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockClient) EXPECT() *MockClientMockRecorder {
	return m.recorder
}

// CreateLambda mocks base method
func (m *MockClient) CreateLambda(arg0 io.Reader, arg1, arg2, arg3, arg4 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateLambda", arg0, arg1, arg2, arg3, arg4)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateLambda indicates an expected call of CreateLambda
func (mr *MockClientMockRecorder) CreateLambda(arg0, arg1, arg2, arg3, arg4 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateLambda", reflect.TypeOf((*MockClient)(nil).CreateLambda), arg0, arg1, arg2, arg3, arg4)
}

// GetS3 mocks base method
func (m *MockClient) GetS3(arg0, arg1 string) ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetS3", arg0, arg1)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetS3 indicates an expected call of GetS3
func (mr *MockClientMockRecorder) GetS3(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetS3", reflect.TypeOf((*MockClient)(nil).GetS3), arg0, arg1)
}

// InvokeLambda mocks base method
func (m *MockClient) InvokeLambda(arg0, arg1 string, arg2 interface{}) ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InvokeLambda", arg0, arg1, arg2)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// InvokeLambda indicates an expected call of InvokeLambda
func (mr *MockClientMockRecorder) InvokeLambda(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InvokeLambda", reflect.TypeOf((*MockClient)(nil).InvokeLambda), arg0, arg1, arg2)
}
